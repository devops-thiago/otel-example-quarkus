apiVersion: 1

datasources:
  # Tempo for traces
  - name: Tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    uid: tempo
    isDefault: false
    editable: true
    jsonData:
      httpMethod: GET
      serviceMap:
        datasourceUid: 'mimir'
      tracesToMetrics:
        datasourceUid: 'mimir'
      tracesToLogs:
        datasourceUid: 'loki'
        mappedTags:
          - key: service.name
            value: service_name
        mapTagNamesEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: true
        tags:
          - service.name
      search:
        hide: false
      nodeGraph:
        enabled: true
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'

  # Mimir for metrics (Prometheus-compatible)
  - name: Mimir
    type: prometheus
    access: proxy
    url: http://mimir:9009/prometheus
    uid: mimir
    isDefault: true
    editable: true
    jsonData:
      httpMethod: POST
      prometheusType: Mimir
      prometheusVersion: 2.40.0
      cacheLevel: High
      disableRecordingRules: false
      incrementalQueryOverlapWindow: 10m
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: tempo

  # Loki for logs
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    uid: loki
    isDefault: false
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: "\"traceid\":\"(\\w+)\""
          name: TraceID
          url: "$${__value.raw}"
          urlDisplayLabel: 'View Trace' 